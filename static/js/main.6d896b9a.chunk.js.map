{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","result","setResult","handleClick","e","concat","target","name","clear","backspace","slice","length","calculate","eval","toString","err","className","type","value","onClick","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"k2BAGA,SAASA,MACP,cAA2BC,oDAAS,IAApC,2MAAOC,OAAP,cAAeC,UAAf,cAEMC,YAAc,SAACC,GAEnBF,UAAUD,OAAOI,OAAOD,EAAEE,OAAOC,QAG7BC,MAAQ,WACZN,UAAU,KAGNO,UAAY,WAEhBP,UAAUD,OAAOS,MAAM,EAAGT,OAAOU,OAAO,KAGpCC,UAAY,SAAZA,YACJ,IACEV,UAAUW,KAAKZ,QAAQa,YAGzB,MAAMC,KACJb,UAAU,WAId,OACI,mEAAKc,UAAU,YAAf,UACE,4EACE,oEAAOC,KAAK,OAAOC,MAAOjB,WAE5B,mEAAKe,UAAU,SAAf,UACE,qEAAQG,QAASX,MAAOQ,UAAU,YAAYI,GAAG,QAAjD,mBACA,qEAAQD,QAASV,UAAWO,UAAU,YAAYI,GAAG,YAArD,eACA,qEAAQb,KAAK,IAAIY,QAAShB,YAAaa,UAAU,YAAjD,kBACA,qEAAQT,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAAaa,UAAU,YAAjD,kBACA,qEAAQT,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAAaa,UAAU,YAAjD,oBACA,qEAAQT,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAAaa,UAAU,YAAjD,eACA,qEAAQT,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAAShB,YAA1B,eACA,qEAAQI,KAAK,IAAIY,QAASP,UAAWI,UAAU,YAAYI,GAAG,SAA9D,qBAMKrB,2B,iIC/CAsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjC,EAAA,EAAD,MAEFkC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6d896b9a.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport './App.css';\n\nfunction App() {\n  const [result, setResult]= useState(\"\");\n\n  const handleClick = (e) => {\n    // console.log(result.concat(e.target.name));\n    setResult(result.concat(e.target.name));\n  };\n  \n  const clear = () => {\n    setResult(\"\");\n  };\n\n  const backspace = () => {\n    // console.log(result.slice(0, result.length-1))\n    setResult(result.slice(0, result.length-1));\n  };\n\n  const calculate = ()  => {\n    try {\n      setResult(eval(result).toString());\n      \n    }\n    catch(err) {\n      setResult(\"Error\")\n    }\n  };\n\n  return (\n      <div className=\"container\">\n        <form>\n          <input type=\"text\" value={result}></input>\n        </form>\n        <div className=\"keypad\">\n          <button onClick={clear} className=\"highlight\" id=\"clear\">Clear</button>\n          <button onClick={backspace} className=\"highlight\" id=\"backspace\">C</button>\n          <button name=\"/\" onClick={handleClick} className=\"highlight\">&divide;</button>\n          <button name=\"7\" onClick={handleClick}>7</button>\n          <button name=\"8\" onClick={handleClick}>8</button>\n          <button name=\"9\" onClick={handleClick}>9</button>\n          <button name=\"*\" onClick={handleClick} className=\"highlight\">&times;</button>\n          <button name=\"4\" onClick={handleClick}>4</button>\n          <button name=\"5\" onClick={handleClick}>5</button>\n          <button name=\"6\" onClick={handleClick}>6</button>\n          <button name=\"-\" onClick={handleClick} className=\"highlight\">&ndash;</button>\n          <button name=\"1\" onClick={handleClick}>1</button>\n          <button name=\"2\" onClick={handleClick}>2</button>\n          <button name=\"3\" onClick={handleClick}>3</button>\n          <button name=\"+\" onClick={handleClick} className=\"highlight\">+</button>\n          <button name=\"0\" onClick={handleClick}>0</button>\n          <button name=\".\" onClick={handleClick}>.</button>\n          <button name=\"=\" onClick={calculate} className=\"highlight\" id=\"result\">=</button>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}